#
# change ####| to ####|
# no space ahead final '|'
#~
:|:|
CREATE FILE VAR|CREATE_FILE ( VAR )|
DEF AN IDEA CALLED VAR WITH VAR :|DEF VAR ( VAR ) :|
DEF VAR ( VAR ) :|DEF VAR ( VAR ) :|
DEF VAR :|DEF VAR :|
DEFINE A FUNCTION CALLED VAR WITH PARAMETERS VAR :|DEF VAR ( VAR ) :|
DEFINE A FUNCTION CALLED VAR WITH ROW VAR AND COLUMN VAR :|DEF VAR ( VAR , VAR ) :|
DEFINE A KIND OF OBJECT CALLED VAR :|CLASS VAR :|
DEFINE IDEA CALLED VAR WITH PARAMETERS VAR AND VAR|DEF VAR ( VAR , VAR ) :|
DEFINE VAR ( SELF , VAR )|DEF VAR ( SELF , VAR ) :|
DEFINE VAR ( VAR ) :|DEF VAR ( VAR ) :|
DEFINE VAR WITH VAR :|DEF VAR ( VAR ) :|
DEFINE VAR WITH VAR AS A FUNCTION|DEF VAR ( VAR ) :|
DEFINE VAR WITH VAR AS FUNCTION :|DEF VAR ( VAR ) :|
DEFINE VAR WITH VAR|DEF VAR ( VAR ) :|
DELETE FILE VAR|REMOVE_FILE ( VAR )|
FOR VAR IN VAR :|FOR VAR IN VAR :|
FOR VAR IN VAR|FOR VAR IN VAR :|
FROM VAR IMPORT VAR AS VAR|FROM VAR IMPORT VAR AS VAR|
FROM VAR IMPORT VAR|FROM VAR IMPORT VAR|
IF VAR :|IF VAR :|
IF VAR EQUALS VAR :|IF VAR == VAR :|
IMPORT VAR AS VAR|IMPORT VAR AS VAR|
IMPORT VAR|IMPORT VAR|
IN|IN|
PRINTLN ( VAR )|PRINTLN ( VAR )|
PRINTLN VAR|PRINTLN ( VAR )|
PRINT ( VAR )|PRINT ( VAR )|eg print ( "Hello" )----->print ("Hello")|
PRINT VALUE OF VAR|PRINT ( VAR )|
PRINT VAR ( VAR )|PRINT ( VAR ( VAR ) )|
PRINT VAR|PRINT ( VAR )|eg print "Hello"----->print ( "Hello" )|
PRINTS VAR|PRINT ( VAR )|
RETURN VAR ( VAR )|RETURN VAR ( VAR )|
RETURN VAR|RETURN VAR|
VAR ( VAR )|VAR ( VAR )|
VAR = FUNCTION ( VAR )|VAR = FUNCTION ( VAR )|
VAR = FUNCTION WITH VAR|VAR = FUNCTION ( VAR )|
VAR = VAR|VAR = VAR|
VAR EQUAL VAR|VAR = VAR|
VAR EQUALS VAR ( VAR )|VAR = VAR ( VAR )|
VAR EQUALS VAR|VAR = VAR|eg x equals 12----->x = 12|
VAR IS A KIND OF VAR1|VAR IS VAR1 ( )|
VAR IS MATRIX WITH ROW VAR AND COLUMN VAR|VAR = MATRIX ( VAR , VAR )|
VAR IS MATRIX WITH ROW VAR COLUMN VAR|VAR = MATRIX ( VAR , VAR )|
VAR IS MONTH|VAR = MONTH()|
VAR IS TEXT FROM VAR|VAR = FILE_READLINES ( VAR )|
VAR IS TIME|VAR = TIME ( )|
VAR IS VAR ( VAR )|VAR = VAR ( VAR )|
VAR IS VAR OF VAR1 AND VAR2|VAR = VAR ( VAR1 , VAR2 )|
VAR IS VAR WITH VAR|VAR = VAR ( VAR )|
VAR IS VAR|VAR = VAR|
VAR TOUPPER()|VAR.TOUPPER()|
VAR TOUPPER|VAR.TOUPPER()|
VAR|VAR|
WHAT TIME IS IT NOW|PRINT(TIME())|
WHILE VAR :|WHILE VAR :|
WRITE VAR1 TO VAR2|FILE_WRITELINES (STR ( VAR2 ) + "," + STR ( VAR1 ) )|
